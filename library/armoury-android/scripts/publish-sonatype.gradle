apply plugin: "maven-publish"
apply plugin: "signing"

// load private configurations
def privateProperties = new Properties()
def privatePropertiesFile = new File("$rootDir/../../../SourceConfig/sonatype.properties")
if (privatePropertiesFile.exists()) {
    privatePropertiesFile.withReader("UTF-8") { reader ->
        privateProperties.load(reader)
    }
} else {
    throw new FileNotFoundException("sonatype.properties file not found.")
}
// check private configurations
if (!privateProperties.containsKey("sonatype.userName") ||
    !privateProperties.containsKey("sonatype.password") ||
    !privateProperties.containsKey("signing.keyId") ||
    !privateProperties.containsKey("signing.password") ||
    !privateProperties.containsKey("signing.secretKeyRingFile")) {
    throw new Exception("errors in private.properties.")
}

def sonatypeUserName = privateProperties.getProperty("sonatype.userName")
def sonatypePassword = privateProperties.getProperty("sonatype.password")

ext["signing.keyId"] = privateProperties.getProperty("signing.keyId")
ext["signing.password"] = privateProperties.getProperty("signing.password")
ext["signing.secretKeyRingFile"] = privateProperties.getProperty("signing.secretKeyRingFile")

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.source
}

publishing {
    publications {
        release(MavenPublication) {
            groupId "dev.xinlake"
            artifactId "armoury"
            version rootProject.versionName

            // Two artifacts, the `aar` and the sources
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact androidSourcesJar

            pom {
                name = "Armoury"
                description = "Xinlake android library for Flutter plugin"
                url = "https://github.com/xinlake/armoury/tree/main/library/armoury-android"

                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/xinlake/armoury/blob/main/library/armoury-android/LICENSE"
                    }
                }

                developers {
                    developer {
                        id = "xinlake"
                        name = "Xinlake Liu"
                        email = "xinlake@outlook.com"
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/armoury.git"
                    developerConnection = "scm:git:ssh://github.com/armoury.git"
                    url = "https://github.com/xinlake/armoury/tree/main/library/armoury-android"
                }
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }

    repositories {
        maven {
            // You only need this if you want to publish snapshots
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            url = version.endsWith("snapshot") ? snapshotsRepoUrl : releasesRepoUrl

            // The username and password of sonatype
            credentials {
                username sonatypeUserName
                password sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications
}
